<?php
namespace Ufo\Error;

use Ufo\Log\Trace as Trace;
/**
 *
 * @author gb-michel
 *        
 */
class StandardException extends \Exception
{
    const NOTICE_LVL = 0;
    const WARNING_LVL = 1;
    const STANDARD_LVL = 2;
    const FATAL_LVL = 3;
    
    public $predef_msg = array(
    	0=>'RUNTIME NOTICE (This exception reflect known issues generated by users, in production this exception is not displayed)',
        1=>'RUNTIME WARNING  (This exception reflect unknown issues generated by users, in production this exception occurs PHP Fatal error)',
        2=>'RUNTIME ERROR  (This exception is a standard exception, , in production this exception is not displayed)',
        3=>'RUNTIME FATAL ERROR (This exception occurs if there is a crash of PHP)'
    );
    
    public function __construct($classname_str, $message, $code = self::STANDARD_LVL, \Exception $previous = null)
    {
        parent::__construct($message, $code, $previous);
        
        if( isset($this->predef_msg[$code]))
            $code_msg = $this->predef_msg[$code];
        else 
            $code_msg = 'RUNTIME UNKNOW EXCEPTION';
        
        Trace::add(_UFO_LOG_RUNNING_,'<b>'.$code_msg.' in : ['.$classname_str.']</b><br>'.$this->__toString().'');
    }
    
    
    public function __toString()
    {
        $msg = '';
        //if( $this->code !== 0) $msg .= "#{$this->code}";
        
        return $msg." {$this->message}\n";
    }
}

?>