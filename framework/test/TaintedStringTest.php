<?php
require_once 'tests/HTTP/TaintedString.php';

require_once 'PHPUnit/Framework/TestCase.php';

/**
 * TaintedString test case.
 */
class TaintedStringTest extends PHPUnit_Framework_TestCase
{

    /**
     *
     * @var TaintedString
     */
    private $TaintedString;

    /**
     * Prepares the environment before running a test.
     */
    protected function setUp()
    {
        parent::setUp();
        
        // TODO Auto-generated TaintedStringTest::setUp()
        
        $this->TaintedString = new TaintedString(/* parameters */);
    }

    /**
     * Cleans up the environment after running a test.
     */
    protected function tearDown()
    {
        // TODO Auto-generated TaintedStringTest::tearDown()
        $this->TaintedString = null;
        
        parent::tearDown();
    }

    /**
     * Constructs the test case.
     */
    public function __construct()
    {
        // TODO Auto-generated constructor
    }

    /**
     * Tests TaintedString->__construct()
     */
    public function test__construct()
    {
        // TODO Auto-generated TaintedStringTest->test__construct()
        $this->markTestIncomplete("__construct test not implemented");
        
        $this->TaintedString->__construct(/* parameters */);
    }

    /**
     * Tests TaintedString->__toString()
     */
    public function test__toString()
    {
        // TODO Auto-generated TaintedStringTest->test__toString()
        $this->markTestIncomplete("__toString test not implemented");
        
        $this->TaintedString->__toString(/* parameters */);
    }

    /**
     * Tests TaintedString->sanitizeWithCheck()
     */
    public function testSanitizeWithCheck()
    {
        // TODO Auto-generated TaintedStringTest->testSanitizeWithCheck()
        $this->markTestIncomplete("sanitizeWithCheck test not implemented");
        
        $this->TaintedString->sanitizeWithCheck(/* parameters */);
    }

    /**
     * Tests TaintedString->sanitizeAsObjectProperty()
     */
    public function testSanitizeAsObjectProperty()
    {
        // TODO Auto-generated TaintedStringTest->testSanitizeAsObjectProperty()
        $this->markTestIncomplete("sanitizeAsObjectProperty test not implemented");
        
        $this->TaintedString->sanitizeAsObjectProperty(/* parameters */);
    }

    /**
     * Tests TaintedString->setDefault()
     */
    public function testSetDefault()
    {
        // TODO Auto-generated TaintedStringTest->testSetDefault()
        $this->markTestIncomplete("setDefault test not implemented");
        
        $this->TaintedString->setDefault(/* parameters */);
    }

    /**
     * Tests TaintedString->markAsAutogenerated()
     */
    public function testMarkAsAutogenerated()
    {
        // TODO Auto-generated TaintedStringTest->testMarkAsAutogenerated()
        $this->markTestIncomplete("markAsAutogenerated test not implemented");
        
        $this->TaintedString->markAsAutogenerated(/* parameters */);
    }

    /**
     * Tests TaintedString->isAutogenerated()
     */
    public function testIsAutogenerated()
    {
        // TODO Auto-generated TaintedStringTest->testIsAutogenerated()
        $this->markTestIncomplete("isAutogenerated test not implemented");
        
        $this->TaintedString->isAutogenerated(/* parameters */);
    }

    /**
     * Tests TaintedString->length()
     */
    public function testLength()
    {
        // TODO Auto-generated TaintedStringTest->testLength()
        $this->markTestIncomplete("length test not implemented");
        
        $this->TaintedString->length(/* parameters */);
    }

    /**
     * Tests TaintedString->getDefaultData()
     */
    public function testGetDefaultData()
    {
        // TODO Auto-generated TaintedStringTest->testGetDefaultData()
        $this->markTestIncomplete("getDefaultData test not implemented");
        
        $this->TaintedString->getDefaultData(/* parameters */);
    }
}

